@using HelperMethods.Models
@model string

@{
    ViewBag.Title = "GetPeaople";
    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        Url = Url.Action("GetPeopleData"),
        LoadingElementDuration = 2000,
        LoadingElementId = "loading",
    };
}

<script type="text/javascript">
    function processData(data) {
        var text = "";
        for (var i = 0; i < data.length; i++) {
            text += "<tr><td>" + data[i].FirstName + "</td><td>" + data[i].LastName + "</td><td>" + data[i].Role + "</td></tr>";
        }
        var target = $("#tableBody");
        target.empty();
        target.append(text);      
    }
</script>

<h2>Данные пользователей</h2>

<div id="loading" class="load" style="display: none">
    <p>Загрузка данных...</p>
</div>

<table>
    <thead>
        <tr>
            <th>Имя</th>
            <th>Фамилия</th>
            <th>Роль</th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @Html.Action("GetPeopleData", new { selectedRole = Model})
    </tbody>
</table>

@using (Ajax.BeginForm(ajaxOptions))
{
    <div>
        @Html.DropDownList("selectedRole", new SelectList(new[] { "All" }.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Отобразить</button>
    </div>
}

<div>
    @foreach (string role in Enum.GetNames(typeof(Role)))
    {
        <div class="ajaxlink">
            @Ajax.ActionLink(role, "GetPeopleDataJson",
                             new { selectedRole = role},
                             new AjaxOptions {
                                 Url = Url.Action("GetPeopleDataJson", new { selectedRole = role}),
                                 OnSuccess = "processData"
                             })
        </div>
    }
</div>



